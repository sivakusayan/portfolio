.btn-container {
  display: flex;
  width: 100%;
  justify-content: space-between;

  @include bp(S) {
    justify-content: flex-start;

    & > .btn:not(:last-child) {
      margin-right: margin(M);
    }
  }
}

.btn {
  display: flex;
  width: 45%;
  align-items: center;
  justify-content: space-around;
  padding: padding(XS);
  border: none;

  border: 1px solid color(primary-light);
  background-color: color(white);
  border-radius: radius(small);
  box-shadow: shadow(big);
  text-decoration: none;
  transition: all 0.2s;

  @include bp(S) {
    width: 16rem;
  }

  @include bp(M) {
    width: 13rem;
  }

  &__icon {
    width: 2.5rem;
    height: 2.5rem;
    fill: color(primary-light);
  }

  &__text {
    display: flex;
    align-items: center;
    justify-content: center;

    color: color(primary-light);
    font-size: 1.5rem;

    // For some reason, setting these two properties to inherit
    // doesn't quite behave as we expect. Look into this later.
    font-family: 'PT Sans Narrow', Helvetica, Arial, sans-serif;
    letter-spacing: 0.3px;

    // Responsively adds and removes text inside button
    .not-small-screens {
      display: none;
      @include bp(XXS) {
        display: inline;
      }
    }
  }
}

@include if-hover() {
  .btn:hover {
    box-shadow: shadow(big);
    cursor: pointer;
    transform: translateY(-3%) scale(1.05);
  }
}

.btn--emphasize,
.btn--header,
.btn--navigation {
  border: none;
  background: linear-gradient(to bottom right, lighten(color(primary-light), 10%), color(primary-light)); 
  color: color(white);

  .btn__icon {
    fill: color(white);
  }

  .btn__text {
    color: color(white);
  }
}

.btn--header {
  position: relative;
  z-index: 0;
  width: 14rem;
  height: 5rem;
  font-size: 1.7rem;
}

@include if-hover() {
  .btn--emphasize:hover,
  .btn--header:hover,
  .btn--navigation:hover {
    background-color: darken(color(primary-light), 10%);
  }
}

// Cancel animation when hovering so hover animation can take place
.btn--header:not(:hover) {
  animation: stretch 2s ease-out infinite;
}

.btn--navigation {
  // Needed for hamburger icon
  position: absolute;
  left: 0;
  bottom: 0;
  min-width: 7rem;
  min-height: 7rem;
  width: 7vw;
  height: 7vw;
  margin: margin(XS);
  border: none;
  border-radius: radius(big);

  // Only need button on bottom for smaller screens
  // so thumbs can easily access
  @include bp(XS) {
    top: 0;
  }
}

@include if-hover() {
  .btn--navigation:hover {
    transform: scale(1.1);
  }
}
